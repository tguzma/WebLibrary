@using Microsoft.AspNetCore.Identity
@using WebLibrary.Utils
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@using WebLibrary.Models.Dtos;
@model IEnumerable<WebLibrary.Models.Dtos.BookDto>
@{
    ViewData["Title"] = "View";
    var user = await UserManager.FindByIdAsync(UserManager.GetUserId(User));
}

<h1>My books</h1>
<div class="row">
    @{
        foreach (var book in Model)
        {

            var isBorrowed = user.BookIds.Contains(book.BookId);

            if (isBorrowed)
            {
                DateTime dateBorrowed = user.BookHistory.FirstOrDefault(x => x.BookId == book.BookId && !x.DateReturned.HasValue).DateBorrowed;

                <div class="col-sm-4">
                <div class="card">
                    <img src="@(book.ImageUrl.Substring(7))" class="card-img-top bookImg">
                    <div class="card-body" id="@book.BookId">
                        <h5 class="card-title">@book.BookName</h5>
                        <p class="card-text">By @book.AuthorName</p>
                        <p class="card-text printsLeft">Prints left: @book.AmountAvalible</p>
                        <p class="card-text expirationDate">Expiration date: @dateBorrowed.AddDays(6)</p>

                        <a class="btn btn-primary" asp-area="" asp-controller="Book" asp-action="Detail" asp-route-id="@book.BookId">Book details</a>
                       @* @if (user.IsApproved) 
                        {
                            @if (User.IsInRole(Constants.Librarian))
                            {
                                <div class="input-group mb-3">
                                    <input type="text" class="form-control userInput" placeholder="Username" aria-describedby="basic-addon2">
                                    <div class="input-group-append">
                                        <button class="btn btn-secondary @(isBorrowed ? "returnBtn" : "borrowBtn")">@(isBorrowed ? "Return" : "Borrow")</button>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <button class="btn btn-secondary @(isBorrowed ? "returnBtn" : "borrowBtn")">@(isBorrowed ? "Return" : "Borrow")</button>
                            }
                        } *@
                    </div>
                </div>
            </div>

            }


        }
    }
</div>